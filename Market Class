import java.util.HashMap;
import java.util.Random;
import java.util.Set;

public class Market {
    NameBases n = new NameBases();
    String marketName;
    boolean isCityMarket;
    int marketSize;
    Items[] itemArray = new Items[marketSize];
    int[] itemPrices = new int[marketSize];
    Random r = new Random();
    Market() {
        this.marketName = n.getMarketName() + " Market!";
        marketSize = 3;
        int item1 = r.nextInt(7);
        int item2 = r.nextInt(7);
        int item3 = r.nextInt(7);
        this.itemArray = new Items[marketSize];
        this.itemPrices = new int[marketSize];
        switch (item1){
            case 0:
                itemArray[0] = Items.POISONANTEDOTE;
                itemPrices[0] = Items.POISONANTEDOTE.getPrice();
                break;
            case 1:
                itemArray[0] = Items.BANDAGE;
                itemPrices[0] = Items.BANDAGE.getPrice();
                break;
            case 2:
                itemArray[0] = Items.ASPIRIN;
                itemPrices[0] = Items.ASPIRIN.getPrice();
                break;
            case 3:
                itemArray[0] = Items.COFFEE;
                itemPrices[0] = Items.COFFEE.getPrice();
                break;
            case 4:
                itemArray[0] = Items.SCANNER;
                itemPrices[0] = Items.SCANNER.getPrice();
                break;
            case 5:
                itemArray[0] = Items.CHICKENPARM;
                itemPrices[0] = Items.CHICKENPARM.getPrice();
                break;
            case 6:
                itemArray[0] = Items.ENERGYDRINK;
                itemPrices[0] = Items.ENERGYDRINK.getPrice();
                break;
        }
        switch (item2) {
            case 0:
                itemArray[1] = Items.POISONANTEDOTE;
                itemPrices[1] = Items.POISONANTEDOTE.getPrice();
                break;
            case 1:
                itemArray[1] = Items.BANDAGE;
                itemPrices[1] = Items.BANDAGE.getPrice();
                break;
            case 2:
                itemArray[1] = Items.ASPIRIN;
                itemPrices[1] = Items.ASPIRIN.getPrice();
                break;
            case 3:
                itemArray[1] = Items.COFFEE;
                itemPrices[1] = Items.COFFEE.getPrice();
                break;
            case 4:
                itemArray[1] = Items.SCANNER;
                itemPrices[1] = Items.SCANNER.getPrice();
                break;
            case 5:
                itemArray[1] = Items.CHICKENPARM;
                itemPrices[1] = Items.CHICKENPARM.getPrice();
                break;
            case 6:
                itemArray[1] = Items.ENERGYDRINK;
                itemPrices[1] = Items.ENERGYDRINK.getPrice();
                break;
        }
        switch (item3) {
            case 0:
                itemArray[2] = Items.POISONANTEDOTE;
                itemPrices[2] = Items.POISONANTEDOTE.getPrice();
                break;
            case 1:
                itemArray[2] = Items.BANDAGE;
                itemPrices[2] = Items.BANDAGE.getPrice();
                break;
            case 2:
                itemArray[2] = Items.ASPIRIN;
                itemPrices[2] = Items.ASPIRIN.getPrice();
                break;
            case 3:
                itemArray[2] = Items.COFFEE;
                itemPrices[2] = Items.COFFEE.getPrice();
                break;
            case 4:
                itemArray[2] = Items.SCANNER;
                itemPrices[2] = Items.SCANNER.getPrice();
                break;
            case 5:
                itemArray[2] = Items.CHICKENPARM;
                itemPrices[2] = Items.CHICKENPARM.getPrice();
                break;
            case 6:
                itemArray[2] = Items.ENERGYDRINK;
                itemPrices[2] = Items.ENERGYDRINK.getPrice();
                break;
        }
    }

        Market(String marketName) {
            this.marketName = marketName;
            marketSize = 3;
            int item1 = r.nextInt(7);
            int item2 = r.nextInt(7);
            int item3 = r.nextInt(7);
            this.itemArray = new Items[marketSize];
            this.itemPrices = new int[marketSize];
            switch (item1){
                case 0:
                    itemArray[0] = Items.POISONANTEDOTE;
                    itemPrices[0] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[0] = Items.BANDAGE;
                    itemPrices[0] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[0] = Items.ASPIRIN;
                    itemPrices[0] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[0] = Items.COFFEE;
                    itemPrices[0] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[0] = Items.SCANNER;
                    itemPrices[0] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[0] = Items.CHICKENPARM;
                    itemPrices[0] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[0] = Items.ENERGYDRINK;
                    itemPrices[0] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item2) {
                case 0:
                    itemArray[1] = Items.POISONANTEDOTE;
                    itemPrices[1] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[1] = Items.BANDAGE;
                    itemPrices[1] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[1] = Items.ASPIRIN;
                    itemPrices[1] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[1] = Items.COFFEE;
                    itemPrices[1] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[1] = Items.SCANNER;
                    itemPrices[1] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[1] = Items.CHICKENPARM;
                    itemPrices[1] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[1] = Items.ENERGYDRINK;
                    itemPrices[1] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item3) {
                case 0:
                    itemArray[2] = Items.POISONANTEDOTE;
                    itemPrices[2] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[2] = Items.BANDAGE;
                    itemPrices[2] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[2] = Items.ASPIRIN;
                    itemPrices[2] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[2] = Items.COFFEE;
                    itemPrices[2] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[2] = Items.SCANNER;
                    itemPrices[2] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[2] = Items.CHICKENPARM;
                    itemPrices[2] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[2] = Items.ENERGYDRINK;
                    itemPrices[2] = Items.ENERGYDRINK.getPrice();
                    break;
            }
        }
    Market(boolean isCityMarket) {
        this.marketName = n.getMarketName() + " City Market!";
        this.isCityMarket = isCityMarket;
        if (isCityMarket) {
            marketSize = 5;
            int item1 = r.nextInt(7);
            int item2 = r.nextInt(7);
            int item3 = r.nextInt(7);
            int item4 = r.nextInt(7);
            int item5 = r.nextInt(7);
            this.itemArray = new Items[marketSize];
            this.itemPrices = new int[marketSize];
            switch (item1) {
                case 0:
                    itemArray[0] = Items.POISONANTEDOTE;
                    itemPrices[0] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[0] = Items.BANDAGE;
                    itemPrices[0] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[0] = Items.ASPIRIN;
                    itemPrices[0] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[0] = Items.COFFEE;
                    itemPrices[0] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[0] = Items.SCANNER;
                    itemPrices[0] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[0] = Items.CHICKENPARM;
                    itemPrices[0] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[0] = Items.ENERGYDRINK;
                    itemPrices[0] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item2) {
                case 0:
                    itemArray[1] = Items.POISONANTEDOTE;
                    itemPrices[1] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[1] = Items.BANDAGE;
                    itemPrices[1] = Items.BANDAGE.getPrice();

                    break;
                case 2:
                    itemArray[1] = Items.ASPIRIN;
                    itemPrices[1] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[1] = Items.COFFEE;
                    itemPrices[1] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[1] = Items.SCANNER;
                    itemPrices[1] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[1] = Items.CHICKENPARM;
                    itemPrices[1] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[1] = Items.ENERGYDRINK;
                    itemPrices[1] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item3) {
                case 0:
                    itemArray[2] = Items.POISONANTEDOTE;
                    itemPrices[2] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[2] = Items.BANDAGE;
                    itemPrices[2] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[2] = Items.ASPIRIN;
                    itemPrices[2] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[2] = Items.COFFEE;
                    itemPrices[2] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[2] = Items.SCANNER;
                    itemPrices[2] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[2] = Items.CHICKENPARM;
                    itemPrices[2] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[2] = Items.ENERGYDRINK;
                    itemPrices[2] = Items.ENERGYDRINK.getPrice();
                    break;
            }

            switch (item4) {
                case 0:
                    itemArray[3] = Items.POISONANTEDOTE;
                    itemPrices[3] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[3] = Items.BANDAGE;
                    itemPrices[3] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[3] = Items.ASPIRIN;
                    itemPrices[3] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[3] = Items.COFFEE;
                    itemPrices[3] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[3] = Items.SCANNER;
                    itemPrices[3] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[3] = Items.CHICKENPARM;
                    itemPrices[3] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[3] = Items.ENERGYDRINK;
                    itemPrices[3] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item5) {
                case 0:
                    itemArray[4] = Items.POISONANTEDOTE;
                    itemPrices[4] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[4] = Items.BANDAGE;
                    itemPrices[4] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[4] = Items.ASPIRIN;
                    itemPrices[4] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[4] = Items.COFFEE;
                    itemPrices[4] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[4] = Items.SCANNER;
                    itemPrices[4] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[4] = Items.CHICKENPARM;
                    itemPrices[4] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[4] = Items.ENERGYDRINK;
                    itemPrices[4] = Items.ENERGYDRINK.getPrice();
                    break;
            }
        } else {
            marketSize = 3;
            int item1 = r.nextInt(7);
            int item2 = r.nextInt(7);
            int item3 = r.nextInt(7);
            this.itemArray = new Items[marketSize];
            this.itemPrices = new int[marketSize];
            switch (item1) {
                case 0:
                    itemArray[0] = Items.POISONANTEDOTE;
                    itemPrices[0] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[0] = Items.BANDAGE;
                    itemPrices[0] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[0] = Items.ASPIRIN;
                    itemPrices[0] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[0] = Items.COFFEE;
                    itemPrices[0] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[0] = Items.SCANNER;
                    itemPrices[0] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[0] = Items.CHICKENPARM;
                    itemPrices[0] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[0] = Items.ENERGYDRINK;
                    itemPrices[0] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item2) {
                case 0:
                    itemArray[1] = Items.POISONANTEDOTE;
                    itemPrices[1] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[1] = Items.BANDAGE;
                    itemPrices[1] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[1] = Items.ASPIRIN;
                    itemPrices[1] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[1] = Items.COFFEE;
                    itemPrices[1] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[1] = Items.SCANNER;
                    itemPrices[1] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[1] = Items.CHICKENPARM;
                    itemPrices[1] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[1] = Items.ENERGYDRINK;
                    itemPrices[1] = Items.ENERGYDRINK.getPrice();
                    break;
            }
            switch (item3) {
                case 0:
                    itemArray[2] = Items.POISONANTEDOTE;
                    itemPrices[2] = Items.POISONANTEDOTE.getPrice();
                    break;
                case 1:
                    itemArray[2] = Items.BANDAGE;
                    itemPrices[2] = Items.BANDAGE.getPrice();
                    break;
                case 2:
                    itemArray[2] = Items.ASPIRIN;
                    itemPrices[2] = Items.ASPIRIN.getPrice();
                    break;
                case 3:
                    itemArray[2] = Items.COFFEE;
                    itemPrices[2] = Items.COFFEE.getPrice();
                    break;
                case 4:
                    itemArray[2] = Items.SCANNER;
                    itemPrices[2] = Items.SCANNER.getPrice();
                    break;
                case 5:
                    itemArray[2] = Items.CHICKENPARM;
                    itemPrices[2] = Items.CHICKENPARM.getPrice();
                    break;
                case 6:
                    itemArray[2] = Items.ENERGYDRINK;
                    itemPrices[2] = Items.ENERGYDRINK.getPrice();
                    break;
            }
        }

    }
    void printMarketMenu(){
        System.out.println("Items:");
         for (int i = 0; i < marketSize; i++) {
             System.out.println((i + 1) + ".) " + itemArray[i].getDescription() + ": " + itemPrices[i]);
        }
        System.out.println((marketSize + 1) + ".) Exit");
        System.out.println("Type in number for purchase");
    }
    void buyItem(Player user, int selection, int backpackSpace) {
        printMarketMenu();
        if (selection == marketSize + 1) {
            System.out.println("Exiting!");
            return;
        }
        if (selection < 0 || selection > itemArray.length + 1) {
            System.out.println("Not a valid item!");
            return;
        }
        else if (user.money - itemPrices[selection -1] < 0) {
            System.out.println("You don't have enough money for that punk!");
            return;
        }
        else {
            System.out.println("You've bought " + itemArray[selection -1].getDescription() + "!");
            System.out.println("Pleasure doing business... Balance is now " + user.money);
            user.money = user.money - itemPrices[selection -1]; // subtract from players funds
            user.backpack[backpackSpace] = itemArray[selection -1]; // add item to users backpack
        }
    }
    public static void main(String[] args) {
        Market test = new Market(true);
        test.printMarketMenu();
    }
}
